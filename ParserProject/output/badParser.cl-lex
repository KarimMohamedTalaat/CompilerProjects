Line : 1
Type : CLASS
Value : class
Line : 1
Type : TYPE
Value : Main
Line : 1
Type : INHERITS
Value : inherits
Line : 1
Type : TYPE
Value : IO
Line : 1
Type : OPEN_CURLY
Value : {
Line : 2
Type : ID
Value : pal
Line : 2
Type : OPENP_PRANSIS
Value : (
Line : 2
Type : ID
Value : s
Line : 2
Type : COLUN
Value : :
Line : 2
Type : TYPE
Value : String
Line : 2
Type : CLOSE_PRANSIS
Value : )
Line : 2
Type : COLUN
Value : :
Line : 2
Type : TYPE
Value : Bool
Line : 2
Type : OPEN_CURLY
Value : {
Line : 3
Type : IF
Value : if
Line : 3
Type : ID
Value : s
Line : 3
Type : DOT
Value : .
Line : 3
Type : ID
Value : length
Line : 3
Type : OPENP_PRANSIS
Value : (
Line : 3
Type : CLOSE_PRANSIS
Value : )
Line : 3
Type : EQUAL
Value : =
Line : 3
Type : INTEGER
Value : 0
Line : 4
Type : THEN
Value : then
Line : 4
Type : ID
Value : true
Line : 5
Type : ELSE
Value : else
Line : 5
Type : IF
Value : if
Line : 5
Type : ID
Value : s
Line : 5
Type : DOT
Value : .
Line : 5
Type : ID
Value : length
Line : 5
Type : OPENP_PRANSIS
Value : (
Line : 5
Type : CLOSE_PRANSIS
Value : )
Line : 5
Type : EQUAL
Value : =
Line : 5
Type : INTEGER
Value : 1
Line : 6
Type : ID
Value : thenn
Line : 6
Type : ID
Value : true
Line : 7
Type : ELSE
Value : else
Line : 7
Type : IF
Value : if
Line : 7
Type : ID
Value : s
Line : 7
Type : DOT
Value : .
Line : 7
Type : ID
Value : substr
Line : 7
Type : OPENP_PRANSIS
Value : (
Line : 7
Type : INTEGER
Value : 0
Line : 7
Type : COMMA
Value : ,
Line : 7
Type : INTEGER
Value : 1
Line : 7
Type : CLOSE_PRANSIS
Value : )
Line : 7
Type : EQUAL
Value : =
Line : 7
Type : ID
Value : s
Line : 7
Type : DOT
Value : .
Line : 7
Type : ID
Value : substr
Line : 7
Type : OPENP_PRANSIS
Value : (
Line : 7
Type : ID
Value : s
Line : 7
Type : DOT
Value : .
Line : 7
Type : ID
Value : length
Line : 7
Type : OPENP_PRANSIS
Value : (
Line : 7
Type : CLOSE_PRANSIS
Value : )
Line : 7
Type : MINUS
Value : -
Line : 7
Type : INTEGER
Value : 1
Line : 7
Type : COMMA
Value : ,
Line : 7
Type : INTEGER
Value : 1
Line : 7
Type : CLOSE_PRANSIS
Value : )
Line : 8
Type : THEN
Value : then
Line : 8
Type : ID
Value : pal
Line : 8
Type : OPENP_PRANSIS
Value : (
Line : 8
Type : ID
Value : s
Line : 8
Type : DOT
Value : .
Line : 8
Type : ID
Value : substr
Line : 8
Type : OPENP_PRANSIS
Value : (
Line : 8
Type : INTEGER
Value : 1
Line : 8
Type : COMMA
Value : ,
Line : 8
Type : ID
Value : s
Line : 8
Type : DOT
Value : .
Line : 8
Type : ID
Value : length
Line : 8
Type : OPENP_PRANSIS
Value : (
Line : 8
Type : CLOSE_PRANSIS
Value : )
Line : 8
Type : MINUS
Value : -
Line : 8
Type : INTEGER
Value : 2
Line : 8
Type : CLOSE_PRANSIS
Value : )
Line : 8
Type : CLOSE_PRANSIS
Value : )
Line : 9
Type : ELSE
Value : else
Line : 9
Type : ID
Value : false
Line : 10
Type : FI
Value : fi
Line : 10
Type : FI
Value : fi
Line : 10
Type : ID
Value : fiaa
Line : 11
Type : CLOSE_CURLY
Value : }
Line : 11
Type : SEMICOLUN
Value : ;
Line : 13
Type : ID
Value : i
Line : 13
Type : COLUN
Value : :
Line : 13
Type : ID
Value : int
Line : 13
Type : SEMICOLUN
Value : ;
Line : 14
Type : ID
Value : main
Line : 14
Type : OPENP_PRANSIS
Value : (
Line : 14
Type : CLOSE_PRANSIS
Value : )
Line : 14
Type : COLUN
Value : :
Line : 14
Type : TYPE
Value : SELF_TYPE
Line : 14
Type : OPEN_CURLY
Value : {
Line : 15
Type : OPEN_CURLY
Value : {
Line : 16
Type : ID
Value : i
Line : 16
Type : ASSIGN_OPERATOR
Value : <-
Line : 16
Type : INTEGER_NEGATIVE
Value : ~
Line : 16
Type : INTEGER
Value : 1
Line : 16
Type : SEMICOLUN
Value : ;
Line : 17
Type : ID
Value : out_string
Line : 17
Type : OPENP_PRANSIS
Value : (
Line : 17
Type : LITERAL
Value : "enter a string\n"
Line : 17
Type : CLOSE_PRANSIS
Value : )
Line : 17
Type : SEMICOLUN
Value : ;
Line : 18
Type : IF
Value : if
Line : 18
Type : ID
Value : pal
Line : 18
Type : OPENP_PRANSIS
Value : (
Line : 18
Type : ID
Value : in_string
Line : 18
Type : OPENP_PRANSIS
Value : (
Line : 18
Type : CLOSE_PRANSIS
Value : )
Line : 18
Type : CLOSE_PRANSIS
Value : )
Line : 19
Type : THEN
Value : then
Line : 19
Type : ID
Value : out_string
Line : 19
Type : OPENP_PRANSIS
Value : (
Line : 19
Type : LITERAL
Value : "It is palindrome\n"
Line : 19
Type : CLOSE_PRANSIS
Value : )
Line : 20
Type : ELSE
Value : else
Line : 20
Type : ID
Value : out_string
Line : 20
Type : OPENP_PRANSIS
Value : (
Line : 20
Type : LITERAL
Value : "It is not a palindrome\n"
Line : 20
Type : CLOSE_PRANSIS
Value : )
Line : 21
Type : ID
Value : fiii
Line : 21
Type : SEMICOLUN
Value : ;
Line : 22
Type : CLOSE_CURLY
Value : }
Line : 23
Type : CLOSE_CURLY
Value : }
Line : 23
Type : SEMICOLUN
Value : ;
Line : 24
Type : CLOSE_CURLY
Value : }
Line : 24
Type : SEMICOLUN
Value : ;
Line : 25
Type : EOF
Value : <EOF>
